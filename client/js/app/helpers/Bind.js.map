{"version":3,"sources":["../../app-es6/helpers/Bind.js"],"names":["ProxyFactory","Bind","model","view","props","proxy","create","update"],"mappings":";;;;;;;;;;;;;;;AAAQA,qB,yBAAAA,Y;;;yBAGKC,I,GAET,cAAYC,KAAZ,EAAmBC,IAAnB,EAAmC;AAAA;;AAAA,8CAAPC,KAAO;AAAPA,oBAAO;AAAA;;AAEhC,gBAAIC,QAAQL,aAAaM,MAAb,CAAoBJ,KAApB,EAA2BE,KAA3B,EAAkC;AAAA,sBAASD,KAAKI,MAAL,CAAYL,KAAZ,CAAT;AAAA,aAAlC,CAAZ;;AAEAC,iBAAKI,MAAL,CAAYL,KAAZ;;AAEA;AACA;AACA,mBAAOG,KAAP;AACF,U","file":"Bind.js","sourcesContent":["import {ProxyFactory} from '../services/ProxyFactory';\n\n// o bind retorna um proxy do model relacionando-o com o seu respectivo view, e as propriedades do model que devem atualizar a view\nexport class Bind {\n\n    constructor(model, view, ...props) {\n\n       let proxy = ProxyFactory.create(model, props, model => view.update(model));\n\n       view.update(model);\n       \n       // recurso interessanto do js, o qual permite um método construtor ter um retorno\n       //    sendo que nesse caso o objeto do retorno é totalmente diferente do tipo da classe do construtor \n       return proxy;\n    }\n}"]}