{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","dataTexto","test","Date","split","map","item","i","data","getDate","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AAEV,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;;;kDAEoBC,S,EAAW;;AAE5B,4BAAG,CAAC,oBAAoBC,IAApB,CAAyBD,SAAzB,CAAJ,EACI,MAAM,IAAID,KAAJ,CAAU,kCAAV,CAAN;;AAEJ;AACA;AACA;AACA,kEAAWG,IAAX,mCAAmBF,UAAUG,KAAV,CAAgB,GAAhB,EAAqBC,GAArB,CAAyB,UAACC,IAAD,EAAMC,CAAN;AAAA,mCAAYD,OAAOC,IAAI,CAAvB;AAAA,yBAAzB,CAAnB;AACH;;;kDAEoBC,I,EAAM;;AAEvB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\n\n    constructor() {\n\n        throw new Error('Esta classe não pode ser instanciada');\n    }\n\n    static textoParaData(dataTexto) {\n\n        if(!/\\d{4}-\\d{2}-\\d{2}/.test(dataTexto))\n            throw new Error('Deve estar no formato aaaa-mm-dd');\n\n        // spread (esparrama) operator -> cada item do array passa a ser um parametro para o new Date\n        //    ex: o split devolve 3 elementos no array, o spread faz com que cada item do array seja \n        //    um argumento da chamada de função -> new f(...a) = new f(a[0],a[1],a[2])\n        return new Date(...dataTexto.split('-').map((item,i) => item - i % 2));\n    }\n\n    static dataParaTexto(data) {\n        \n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`;\n    }\n}\n"]}