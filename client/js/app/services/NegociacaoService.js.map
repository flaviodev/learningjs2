{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","negociacao","getConnection","then","connection","dao","adiciona","catch","console","log","erro","Error","Promise","resolve","reject","get","negociacoes","map","Date","objeto","data","quantidade","valor","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","reduce","arrayAchatado","array","concat","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    cadastra(negociacao) {\n\n        return ConnectionFactory.getConnection()\n           .then(connection => new NegociacaoDao(connection))\n           .then(dao => dao.adiciona(negociacao))\n           .then(() => 'Negociação cadastrada com sucesso')\n           .catch(erro => {\n              console.log(erro);\n              throw new Error('Não foi possível adicionar a negociação')\n           });\n   }\n\n    obterNegociacoesDaSemana() {\n\n        // retornando uma promisse da promisse\n        return new Promise((resolve, reject) => {\n            \n            this._http\n                .get('negociacoes/semana')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana');\n                })\n        });\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get('negociacoes/anterior')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana anterior');\n                })\n        });\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n\n        return new Promise((resolve, reject) => {\n\n            this._http\n                .get('negociacoes/retrasada')\n                .then(negociacoes => {\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\n                })\n                .catch(erro => {\n                    console.log(erro);\n                    reject('Não foi possível obter as negociações da semana retrasada');\n                })\n        });\n    }\n\n    obterNegociacoes() {\n\n        return new Promise((resolve, reject) => {\n\n            // recurso extremamente útil para 'encadear' diversas promisses \n            Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()]\n            ).then(negociacoes => resolve(negociacoes.reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])))\n            .catch(erro => reject(erro));  \n        });\n    }\n\n    lista() {\n\n        return ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(erro);\n                throw new Error('Não foi possível obter as negociações')\n            });\n    }\n\n    apaga() {\n\n        return ConnectionFactory.getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso')\n            .catch(erro => {\n                  console.log(erro);\n                  throw new Error('Não foi possível apagar as negociações')\n            });\n    }\n\n    importa(listaAtual) {\n\n        // funcao some itera o array e quando encontra o elemento para de efetaur a iteracao\n        // nesse caso a filtragem é para buscar o diff da importação com o que já existe (por isso a negação no some)\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao =>\n                    !listaAtual.some(negociacaoExistente =>\n                        JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente))))\n            .catch(erro => {\n                console.log(erro);\n                throw new Error(\"Não foi possível importar as negociações\");\n            });\n    }\n\n}"]}