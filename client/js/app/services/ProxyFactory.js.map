{"version":3,"sources":["../../app-es6/services/ProxyFactory.js"],"names":["ProxyFactory","objeto","props","acao","Proxy","get","target","prop","receiver","includes","_isFuncao","console","log","Reflect","apply","arguments","set","value","func","Function"],"mappings":";;;;;;;;AACA;AACA;IACMA,Y;;;;;;;+BAEYC,M,EAAQC,K,EAAOC,I,EAAM;;AAE/B,mBAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;;AAErB;AACAI,mBAHqB,eAGjBC,MAHiB,EAGTC,IAHS,EAGHC,QAHG,EAGO;;AAExB,wBAAGN,MAAMO,QAAN,CAAeF,IAAf,KAAwBP,aAAaU,SAAb,CAAuBJ,OAAOC,IAAP,CAAvB,CAA3B,EAAiE;AAC7D,+BAAO,YAAW;;AAEdI,oCAAQC,GAAR,sBAA8BL,IAA9B;AACAM,oCAAQC,KAAR,CAAcR,OAAOC,IAAP,CAAd,EAA4BD,MAA5B,EAAoCS,SAApC;AACA,mCAAOZ,KAAKG,MAAL,CAAP;AACH,yBALD;AAMH;AACD,2BAAOO,QAAQR,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,CAAP;AACH,iBAdoB;;;AAgBrB;AACAQ,mBAjBqB,eAiBjBV,MAjBiB,EAiBTC,IAjBS,EAiBHU,KAjBG,EAiBIT,QAjBJ,EAiBc;AAC/B,wBAAGN,MAAMO,QAAN,CAAeF,IAAf,CAAH,EAAyB;AACrBI,gCAAQC,GAAR,sBAA8BL,IAA9B;AACAD,+BAAOC,IAAP,IAAeU,KAAf;AACAd,6BAAKG,MAAL;AACH;;AAED,2BAAOO,QAAQG,GAAR,CAAYV,MAAZ,EAAoBC,IAApB,EAA0BU,KAA1B,EAAiCT,QAAjC,CAAP;AACH;AAzBoB,aAAlB,CAAP;AA2BH;;;kCAEgBU,I,EAAM;;AAEnB,mBAAO,QAAOA,IAAP,yCAAOA,IAAP,cAAuBC,QAAvB,yCAAuBA,QAAvB,EAAP;AAEH","file":"ProxyFactory.js","sourcesContent":["\n// o proxy encapsula nesse projeto o tratamento de autalização da view em virtude \n//     da modificação do estado da propriedades do model\nclass ProxyFactory {\n\n    static create(objeto, props, acao) {\n\n        return new Proxy(objeto, {\n\n            // interceptando invocação da função\n            get(target, prop, receiver) {\n\n                if(props.includes(prop) && ProxyFactory._isFuncao(target[prop])) {\n                    return function() {\n\n                        console.log(`a propriedade \"${prop}\" foi interceptada`);\n                        Reflect.apply(target[prop], target, arguments);\n                        return acao(target);\n                    }\n                }\n                return Reflect.get(target, prop, receiver);       \n            },\n\n            // interceptado alteração do atributo\n            set(target, prop, value, receiver) {\n                if(props.includes(prop)) {\n                    console.log(`a propriedade \"${prop}\" foi interceptada`);\n                    target[prop] = value;\n                    acao(target);\n                }\n            \n                return Reflect.set(target, prop, value, receiver);\n            }\n        })\n    }\n\n    static _isFuncao(func) {\n\n        return typeof(func) == typeof(Function);\n    \n    }\n}"]}